on:
  push:
    branches:
      - main
  workflow_dispatch:
jobs:
  translate:
    runs-on: macos-latest
    timeout-minutes: 30
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Install plamo-translate
        run: uv tool install -p 3.12 plamo-translate
        shell: bash

      - name: Get Hugging Face Models cache info
        id: hf-cache
        run: |
          plamo_translate_model_dir_name="models--mlx-community--plamo-2-translate"
          echo "model-dir=${HOME}/.cache/huggingface/hub/${plamo_translate_model_dir_name}" >> $GITHUB_OUTPUT
          echo "plamo-translate-model=${plamo_translate_model_dir_name}" >> $GITHUB_OUTPUT
        shell: bash

      - name: Download Hugging Face Models cache
        id: hf-cache-restore
        uses: actions/cache/restore@v4
        with:
          path: ${{ steps.hf-cache.outputs.model-dir }}
          key: ${{ runner.os }}-plamo-translate-model-${{ steps.hf-cache.outputs.plamo-translate-model }}
          restore-keys: |
            ${{ runner.os }}-plamo-translate-model-

      - name: Run plamo-translate
        run: |
          sudo sysctl iogpu.wired_limit_mb=5600
          SECONDS=0
          plamo-translate --from English --to Japanese --no-stream < "LICENSE" > "LICENSE_ja"
          echo "Translation took $SECONDS seconds"
          cat "LICENSE_ja"
        shell: bash

      - name: Run plamo-translate server-style
        run: |
          sudo sysctl iogpu.wired_limit_mb=5600
          SECONDS=0
          temp_dir="${RUNNER_TEMP}/plamo-translate-action"
          mkdir -p "${temp_dir}"

          FIFO_PIPE="${temp_dir}/server-output"
          mkfifo "${FIFO_PIPE}"
          (plamo-translate server > "${FIFO_PIPE}" 2>&1 ) &
          server_pid=$!
          grep -m 1 "running" "${FIFO_PIPE}" > /dev/null # Wait for the server to start

          plamo-translate --from English --to Japanese --no-stream < "LICENSE" > "LICENSE_ja"
          echo "Translation took $SECONDS seconds"
          kill ${server_pid}
          rm -f "${FIFO_PIPE}"
          cat "LICENSE_ja"
        shell: bash

      - name: Run plamo-translate server-style-2
        run: |
          sudo sysctl iogpu.wired_limit_mb=5600
          SECONDS=0
          temp_dir="${RUNNER_TEMP}/plamo-translate-action"
          mkdir -p "${temp_dir}"

          FIFO_PIPE="${temp_dir}/server-output"
          mkfifo "${FIFO_PIPE}"
          (plamo-translate server > "${FIFO_PIPE}" 2>&1 ) &
          server_pid=$!
          grep -m 1 "running" "${FIFO_PIPE}" > /dev/null # Wait for the server to start

          plamo-translate --from English --to Japanese --no-stream< ".github/workflows/translate.yml" > "translate_ja.yml"
          echo "Translation took $SECONDS seconds"
          kill ${server_pid}
          rm -f "${FIFO_PIPE}"
          cat "translate_ja.yml"
        shell: bash


      - name: Cache Hugging Face Models
        if: always() && ${{ steps.hf-cache-restore.outputs.cache-hit != 'true' }}
        uses: actions/cache/save@v4
        with:
          path: ${{ steps.hf-cache.outputs.model-dir }}
          key: ${{ steps.hf-cache-restore.outputs.cache-primary-key }}